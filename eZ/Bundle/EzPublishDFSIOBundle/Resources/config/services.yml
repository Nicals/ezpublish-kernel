parameters:
    dfs.io_handler.class: EzSystems\DFSIOBundle\eZ\IO\Handler\DFS
    dfs.io_handler.metadata_handler.legacy_dfs_cluster.class: EzSystems\DFSIOBundle\eZ\IO\Handler\MetadataHandler\LegacyDFSCluster
    dfs.io_handler.binarydata_handler.dispatcher.class: EzSystems\DFSIOBundle\eZ\IO\Handler\BinaryDataHandler\Dispatcher
    dfs.io_handler.binarydata_handler.dispatcher.path_based_registry.class: EzSystems\DFSIOBundle\eZ\IO\Handler\BinaryDataHandler\Dispatcher\PathBasedRegistry

services:
    dfs.io_handler:
        class: %dfs.io_handler.class%
        arguments:
            [ @dfs.io_handler.db, @dfs.io_handler.binaryDataHandler ]

    dfs.io_handler.metadata_handler:
        alias: dfs.io_handler.metadata_handler.legacy_dfs_cluster

    dfs.io_handler.metadata_handler.legacy_dfs_cluster:
        class: %dfs.io_handler.metadata_handler.legacy_dfs_cluster.class%
        arguments:
            # @todo Should probably be injected by eZ Publish level configuration
            - @doctrine.dbal.connection.cluster

#    dfs.io_handler.metadata_handler.filesystem:
#        class: %dfs.io_handler.metadata_handler.legacy_dfs_cluster.class%
#        arguments:
#            - @doctrine.dbal.connection.cluster

    dfs.io_handler.binarydata_handler:
        class: %dfs.io_handler.binaryDataHandler.class%

    dfs.io_handler.binarydata_handler.filesystem:
        class: %dfs.io_handler.binarydata_handler.filesystem.class%

    dfs.io_handler.binarydata_handler.dispatcher.path_based_registry:
        class: %dfs.io_handler.binarydata_handler.dispatcher.path_basedregistry%
        # Should be built through semantic config
        arguments:
            - @dfs.io_handler.binarydata_handler.filesystem
            - {'images/': @oneup_flysystem.aws_s3}
